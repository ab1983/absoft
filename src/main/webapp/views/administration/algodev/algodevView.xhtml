<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html  xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets"
       xmlns:h="http://java.sun.com/jsf/html"
       xmlns:f="http://java.sun.com/jsf/core"
       xmlns:p="http://primefaces.org/ui"
       xmlns:c="http://java.sun.com/jsp/jstl/core">
    <script>var loaded = false;
        var page = null; 
        var formOld = "";
        var formOld2 = "";
        </script>     
    <h:form prependId="false" acceptcharset="ISO-8859-1" styleClass="ui-algo-container-form">    
        <p:remoteCommand rendered="true" name="updateCurrentForm" immediate="true" update="@form"/>
        <p:remoteCommand rendered="false" name="updateBasePanel" update=":basePanel"/>  
        <p:remoteCommand name="updateStartPage" actionListener="#{app.updateContainerPage()}" update="@form"/>  
        <p:remoteCommand name="eventBeanRc" actionListener="#{app.eventBean()}" update="@form"/>
        <script type="text/javascript">
            /* <![CDATA[ */
            function init1() {

                //alert($('.ui-growl').html());
                if (page !== '#{app.containerPage}') {
                    page = '#{app.containerPage}';
                    window.setTimeout(function() {
                        if ($('.ui-growl').html() !== '') {
                            //alert($('.ui-growl').html() + '1');
                            window.setTimeout(function() {
                                //updateCurrentPage();
                            }, 1000);
                        } else {
                            //updateCurrentPage();
                        }
                    }, 100);
                }
            }
            function isFormChanged(){
                var formNew = $('.ui-algo-container').html();  
                if(formNew !== formOld && formNew!== formOld2){
                	formOld2 = formOld;
    	            formOld = formNew;  
    	            return true;
                }else{
                	return false;
                }        	
            }
            function clearFormChanged(){
	            formOld = "";
	            formOld2 = "";            	
            }
            function eventPage(call) {
                //if (page !== '#{app.containerPage}') {
                    //page = '#{app.containerPage}';
                //}
            	if(isFormChanged()){
	           		eventBeanRc([{name: 'call', value: call}]);            		
            	}                
            }             
            function eventBean(call) {
            	if(isFormChanged()){
	           		eventBeanRc([{name: 'call', value: call}]);            		
            	}
            }
            function focusBean(element) {
	            window.setTimeout(function() {
	                $(element).focus();
	            }, 1000);            
            }            
            //init1();
            /* ]]> */
        </script>
        <p:panel  binding="#{app.algoContainerView}"  style="width: 1024px;height: 490px;" styleClass="ui-algo-container" >
			
        </p:panel>                   

        <p:dialog onShow="prepareExportHtmlToPdf('.ui-algo-container .ui-datatable-tablewrapper');" widgetVar="exportTableDlg" header="Selecione o Formato para Exportação" modal="false" dynamic="true" resizable="false">
            <h:commandLink rendered="false">  
                <p:graphicImage value="resources/images/excel.png" />  
                <p:dataExporter type="xls" target="#{app.dataTableSelected.id}" fileName="#{app.requirement.requirementName}" />  
            </h:commandLink>  

            <h:commandLink rendered="false" charset="UTF-8" actionListener="#{app.exportHtmlToPdf()}" target="_blank">   
                <p:graphicImage value="resources/images/pdf.png" />  
            </h:commandLink>  

            <h:commandLink  actionListener="#{app.exportPdf()}" target="_blank">   
                <p:graphicImage value="resources/images/pdf.png" />  
            </h:commandLink>  

            <h:commandLink>  
                <p:graphicImage value="resources/images/csv.png" />  
                <p:dataExporter type="csv" target="#{app.dataTableSelected.id}" fileName="#{app.requirement.requirementName}" />  
            </h:commandLink>  

            <h:commandLink>  
                <p:graphicImage value="resources/images/xml.png" />  
                <p:dataExporter type="xml" target="#{app.dataTableSelected.id}" fileName="#{app.requirement.requirementName}" />  
            </h:commandLink>        
        </p:dialog>               
        <input type="hidden" name="html" id="html" value="" />
        <input type="hidden" name="css" id="css" value=""/>

        <p:remoteCommand immediate="false" name="exportHtmlToPdf" actionListener="#{(app.exportHtmlToPdf)}"/>
        <p:remoteCommand immediate="false" name="exportPdf" actionListener="#{(app.exportPdf())}"/>
        <p:commandButton value="Atualizar" rendered="false" immediate="true" oncomplete="updateStartPage();"/>
        <f:event type="preRenderComponent" listener="#{(app.setAlgoContainer(app.algoContainerView))}"/>
        <f:phaseListener binding="#{app.getPhaseListenerImpl()}" /> 
        <p:dialog widgetVar="pdfViewer" dynamic="true" rendered="false">
            <p:media value="#{app.pdfFileStr}" player="pdf" width="100%" height="300px">  
                Your browser can't display pdf, <h:outputLink value="#{app.pdfFileStr}">click</h:outputLink> to download pdf instead.  
            </p:media>            
        </p:dialog>
        <style>
            .ui-algo-element-container{
                position: relative !important;
            }
            .ui-algo-element-value{
                /*position: absolute !important;*/
            }
        </style>
        <script type="text/javascript">
            /* <![CDATA[ */
            var tabindex = null;
            var firstindex = null;

            function findIndex(elements) {
                elements.each(function() {
                    if ($(this).children().length > 0) {
                        findIndex($(this).children());
                    }
                    if (this.type !== "hidden" && this.value === '') {
                        if (firstindex === null) {
                            firstindex = this;
                        }
                        if ((tabindex === null && $(this).attr("tabindex") !== undefined) || parseFloat($(this).attr("tabindex")) < parseFloat($(tabindex).attr("tabindex"))) {
                            tabindex = this;
                            window.setTimeout(function() {
                                $(tabindex).focus();
                            }, 1000);
                        }
                    }
                    //alert($(tabindex).attr("tabindex"));
                });
            }
            function init2() {
                var elements = $('.ui-algo-container').find('[tabindex]');
                findIndex(elements);
                if (tabindex === null && firstindex !== null) {
                	window.setTimeout(function() {
                        $(firstindex).focus();
                    }, 1000);
                }
                //alert($(tabindex).attr("tabindex"));
                if (!loaded) {
                    //updateCurrentForm();
                    //updateCurrentConteiner();
                    //updateBasePanel();
                    loaded = true;
                }
            }   
            function formIsEmpty(){
            	var isEmpty = true;
            	var elements = $('.ui-algo-container').find('[tabindex]');
            	elements.each(function() {
                    if ($(this).children().length > 0) {
                        //findIndex($(this).children());
                    }
                    if (this.value !== '') {
                    	isEmpty = false;
                    	return;
                    }
            	});
            	return isEmpty;
            }
            if(formIsEmpty()){
	            init2();            	
            }
            if (page !== '#{app.containerPage}') {            	
	            page = '#{app.containerPage}';
	            clearFormChanged();
	            init2();   
            }            
            /* ]]> */
        </script>     
        <script>
            function generateCSS() {
                var cssStr = "";
                $("link[type='text/css']").each(function() {
                    //cssStr += $(this)[0].outerHTML;
                    cssStr += $(this).attr('href') + ";";
                });
                return cssStr;
            }
            function prepareExportHtmlToPdf(contentClass) {
                $(contentClass + ' input').remove();
                $(contentClass + ' table').css("font-size", "10px");
                $(esc('html')).val($(contentClass).html());
                //$('.ui-algo-container input').remove();
                //$(esc('html')).val($('.data-list')[0].outerHTML);
                $(esc('css')).val(generateCSS());
                //'.ui-algo-container .ui-datatable-tablewrapper'
                //alert($(esc('tabView:css')).val());
            }
            // Add the $() function
            $ = jQuery;
            
            // Now you can use it
            $(document).ready(function() {
                $('.dateFormat .hasDatepicker').mask('#{msg['dateMask']}');
                $('.timeFormat .hasDatepicker').mask('#{msg['timeMask']}');

                $(".decimalFormat1").maskMoney({
                    thousands: '#{msg.thousandsSeparator}',
                    decimal: '#{msg.decimalSeparator}',
                    precision: 1
                });
                $(".decimalFormat2").maskMoney({
                    thousands: '#{msg.thousandsSeparator}',
                    decimal: '#{msg.decimalSeparator}',
                    precision: 2
                });
                $(".decimalFormat3").maskMoney({
                    thousands: '#{msg.thousandsSeparator}',
                    decimal: '#{msg.decimalSeparator}',
                    precision: 3
                });
                $(".decimalFormat4").maskMoney({
                    thousands: '#{msg.thousandsSeparator}',
                    decimal: '#{msg.decimalSeparator}',
                    precision: 4
                });
                $(".decimalFormat5").maskMoney({
                    thousands: '#{msg.thousandsSeparator}',
                    decimal: '#{msg.decimalSeparator}',
                    precision: 5
                });
                $(".decimalFormat6").maskMoney({
                    thousands: '#{msg.thousandsSeparator}',
                    decimal: '#{msg.decimalSeparator}',
                    precision: 6
                });
            });
        </script>        
        <style>
        	#{app.requirement.requirementStyle}
        </style>
    </h:form>
    <h:form styleClass="handleFileDlgx"> 
        <p:dialog header="#{msg['FILE']}" onHide="updateStartPage();" widgetVar="uploadFileWv" visible="false" modal="false" dynamic="false" resizable="false">
            <h:panelGrid columns="2" styleClass="handleFileDlg">
                <p:fileUpload sizeLimit="15000000" invalidSizeMessage="Tamanho do Arquivo Inválido! Limite de 15MB excedido." fileUploadListener="#{(app.handleFileUpload)}" mode="advanced" dragDropSupport="false" auto="true" uploadLabel="#{msg.upload}" cancelLabel="#{msg.cancel}" label="#{msg.include}"/>
                <h:panelGroup styleClass="handleFileDlg" style="text-align: center;display: table;" >
                    <p:outputLabel styleClass="handleFileDlg" value="#{app.fileDownload!=null?app.fileDownload.name:''}"/>
                    <br/>
                    <p:graphicImage  binding="#{handleFileDlgImg1}" styleClass="handleFileDlgImg" value="#{app.fileDownload}" height="100" width="80">
                    </p:graphicImage>
                    <br/>
                    <p:commandButton widgetVar="downloadBtnWv" value="#{msg.download}" ajax="false" onclick="PrimeFaces.monitorDownload(start, stop)"   
                                     icon="ui-icon ui-icon-arrowthickstop-1-s">  
                        <p:fileDownload value="#{app.fileDownload}" />  
                    </p:commandButton>  
                    <h:commandLink target="_blank" onclick="PrimeFaces.monitorDownload(start, stop)">
                        <p:button widgetVar="downloadBtnWv2" value="#{msg.open}"  
                                  icon="ui-icon ui-icon-arrowthickstop-1-s" >  
                        </p:button>            
                        <p:fileDownload value="#{app.fileDownload}" contentDisposition="inline"/>                          
                    </h:commandLink>   
                </h:panelGroup>
            </h:panelGrid>
        </p:dialog>
        <!--f:event rendered="false" type="preRenderComponent" listener="#{app.setFilePreviewEvt(baseBean.getComponentEvent(handleFileDlgImg1))}"/-->
        <p:dialog modal="true" widgetVar="statusDialog" header="Status" draggable="false" closable="false" resizable="false">  
            <p:graphicImage value="/resources/images/ajaxloadingbar.gif" />  
        </p:dialog>      
        <p:remoteCommand name="updateHandleFileDlg" update="@(.handleFileDlg)" immediate="true" onstart="updateFilePreview();" oncomplete="setFilePreview();"/>   
        <p:remoteCommand name="updateHandleFileDlg3" update="@(.handleFileDlg3)" immediate="true"/>  
        <p:remoteCommand name="updateFilePreview"  immediate="true" update="@(.handleFileDlgImg)"/>   
        <p:remoteCommand name="setFilePreview" actionListener="#{(app.setFilePreview(handleFileDlgImg1))}" immediate="false"/>   
        <p:remoteCommand name="sendEmailRc" actionListener="#{app.sendEmail()}" immediate="true"/>   
        <p:remoteCommand name="randomSortRc" actionListener="#{app.randomSort()}" immediate="false" oncomplete="resetFormRc()"/>   
        <p:remoteCommand name="resetFormRc" actionListener="#{app.resetForm(admAlgoappBeanForm.getClientId())}" immediate="true" oncomplete="updateCurrentForm()"/>   
        <h:panelGroup styleClass="handleFileDlg3"></h:panelGroup>
        <script>
            #{app.fileDownload!=null?'downloadBtnWv.jq.show();downloadBtnWv2.jq.show()':'downloadBtnWv.jq.hide();downloadBtnWv2.jq.hide();'};
            //#{app.fileDownload!=null and !".png .jpg .gif .bmp".contains(app.fileDownload.name.substring(app.fileDownload.name.lastIndexOf(".")))?"$('.handleFileDlgImg').hide();":"$('.handleFileDlgImg').show();"};
            //#{app.fileDownload!=null?"alert('".concat(app.fileDownload.name.substring(app.fileDownload.name.lastIndexOf("."))).concat("')"):''};
            function handleFileUploadDlg(xhr, status, args) {
                var isValid = args.isValid;
                if (isValid) {
                    //$('.handleFileDlgImg').attr('src', '');
                    uploadFileWv.show();
                    updateHandleFileDlg();
                }
            }
            function sendEmail(email_destin, name_destin, email_msg, email_title) {
                sendEmailRc([{name: 'email_destin', value: email_destin}, {name: 'name_destin', value: name_destin}, {name: 'email_msg', value: email_msg}, {name: 'email_title', value: email_title}]);
            }
            function randomSort(list_field, amount_field, target_field) {
                randomSortRc([{name: 'list_field', value: list_field}, {name: 'amount_field', value: amount_field}, {name: 'target_field', value: target_field}]);
            }           
        </script>
        <script type="text/javascript">
            function start() {
                PF('statusDialog').show();
            }

            function stop() {
                PF('statusDialog').hide();
            }
            /*
            $('.myElement').bind('keypress', function(event){
                if(event.which === 13){
                    if(event.shiftKey){
                        $.tabPrev();
                    }
                    else{
                        $.tabNext();
                    }
                    return false;
                }
            });
            */            
        </script>             
    </h:form>
</html>
